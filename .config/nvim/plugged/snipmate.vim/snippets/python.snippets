snippet #!
	#!/usr/bin/env python
snippet imp
	import ${1:module}
# Personal
snippet fimp
	from ${1:module} import ${2:function}
# Personal
snippet impas
	import ${1:module} as ${2:shorthand}
# Personal
snippet fimpas
	from ${1:module} import ${2:function} as ${3:shorthand}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
# Personal
snippet while
	while ${1:condition}:
		${2:pass}
# Personal
snippet forr
	for ${1:i} in ${2:list_name}:
		${3:pass}
# New Class
# Personal
snippet class
	class ${1:ClassName}(${2:object}):

		def __init__(self, ${3:arg}):
			${4:pass}
snippet fclass
	class ${1:ClassName}(${2:object}):
		${3:"""docstring for $1"""}
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Function
# Personal
snippet def
	def ${1:fname}(${2}):
		${3:pass}
# Edited Tab Trigger
snippet defd
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""${3:Docstring}"""
		${4:pass}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:pass}
# New Property
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${4:self._$1 = value}
# Lambda
snippet lambda
	${1:var} = lambda ${2:vars} : ${3:action}
snippet .
	self.
# Personal
snippet lc
	${1:list_name} = [${2:i} for $2 in ${3:list_name}]
# Try Branches
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet __
	__${1:init}__${2}
# Personal
snippet #line
	# --------------------------------------------------------------------------------
# Formated Printing
# Personal
snippet fprint
	print(f'${1}')
# Personal
snippet ftag
	{${1}}
# Personal
snippet sftag
	{self.${1}}
# Personal
# Opening
snippet wo
	with open('${1:file_name}') as ${2:f}:
		${3:pass}
# Personal
snippet date
	`system("date +%d/%m/%Y")`
snippet todo
	# `system("date +%d/%m/%Y")`
	# TODO: ${1:What has to be done...}
#
# Flask Snippets
snippet flserver
	from flask import Flask, render_template, url_for, redirect, request

	app = Flask(__name__)

	@app.route('/')
	${1}

	if __name__ == '__main__':
		app.run(debug=True)
snippet flroute
	@app.route('/${1}')	
	def $1():
		return render_template('$1.html')
